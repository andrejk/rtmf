<?xml version="1.0" encoding="UTF-8"?>
<project name="IOO Ear Deployment" xmlns:oracle="antlib:oracle">
    <description>
        Ant file to deploy an EAR file to OC4J.
        Building the EAR is done on the machine where it will be deployed.
        This Ant file is included in a tarball generated by Maven on a developer workstation.

        You need to provide relevant properties with -Ddeploy.properties.file=...
        when using this file.
    </description>

    <property file="version.properties"/>

    <!-- source dir that contains the ear/jar/war packages to deploy -->
    <property name="deploy.packages.dir" value="."/>

    <!-- the target dir is where files generated on deployment machine go. -->
    <property name="target.dir" value="target" />
    <property name="ear.file" value="${deploy.packages.dir}/zm-ear-${application.version}.ear" />
    <property name="application.plan.file" value="${target.dir}/application_plan.dat" />
    <property name="deploy.log" value="${target.dir}/deploy.log" />
    <property name="undeploy.log" value="${target.dir}/undeploy.log" />

    <!-- where to find target-specific properties -->
    <property file="${deploy.properties.file}" />

    <property name="log4j.configfile" value="${application.propdir.zmag}/log4j.properties" />

    <target name="buildinfo"
            description="Display build information">
        <echo message="BuildName: ${ant.project.name}"/>
        <echo message="BuildHome: ${basedir}"/>
        <echo message="BuildFile: ${ant.file}"/>
        <echo message="BuildJVM: ${ant.java.version}"/>
    </target>


    <target name="propcheck"
            description="Verify that properties required by deployment are present">
        <echo message="Verify that properties required by deployment are present"/>
        <fail unless="deploy.properties.file" message="Missing command line argument: -Ddeploy.properties.file=..." />
        <fail unless="oc4j.admin.user" message="Required property missing from ${deploy.properties.file}: oc4j.admin.user" />
        <fail unless="oc4j.admin.password" message="Required property missing from ${deploy.properties.file}: oc4j.admin.password" />
        <fail unless="deployer.uri" message="Required property missing from ${deploy.properties.file}: deployer.uri" />
        <fail unless="application.name.zmag" message="Required property missing from ${deploy.properties.file}: application.name.zmag" />
        <fail unless="application.propdir.zmag" message="Required property missing from ${deploy.properties.file}: application.propdir.zmag" />
        <fail unless="application.contextroot.zmag" message="Required property missing from ${deploy.properties.file}: application.contextroot.zmag" />
        <fail unless="database.zmag.driver" message="Required property missing from ${deploy.properties.file}: database.zmag.driver" />
        <fail unless="database.zmag.url" message="Required property missing from ${deploy.properties.file}: database.zmag.url" />
        <fail unless="database.zmag.user" message="Required property missing from ${deploy.properties.file}: database.zmag.user" />
        <fail unless="database.zmag.password" message="Required property missing from ${deploy.properties.file}: database.zmag.password" />
    </target>

    <target name="dircheck"
            depends="propcheck"
            description="Verify that directories and files required by application are present">
        <echo message="Verify that directories and file required by application are present" />
        <available file="${application.propdir.zmag}" type="dir" property="application.propdir.present" />
        <fail unless="application.propdir.present" message="Required application directory missing: ${application.propdir.zmag}" />
        <available file="${log4j.configfile}" type="file" property="application.log4j.present" />
        <fail unless="application.log4j.present" message="Required application file missing: ${log4j.configfile}" />
    </target>

    <target name="dbcheck"
            depends="propcheck"
            description="Verify that db needed by app exists">
        <echo message="Verify that db needed by app exists" />
        <sql driver="${database.zmag.driver}"
                url="${database.zmag.url}"
                userid="${database.zmag.user}"
                password="${database.zmag.password}">
            select * from dual
        </sql>
    </target>

    <target name="create-datasource"
            depends="target-dir, dbcheck"
            description="add database connection to oc4j container">
        <echo message="add database connection to oc4j container" />
        <oracle:createJDBCConnectionPool
            deployeruri="${deployer.uri}"
            userid="${oc4j.admin.user}"
            password="${oc4j.admin.password}"
            applicationname="default"
            name="ZakenCP"
            factoryclass="oracle.jdbc.pool.OracleDataSource"
            dbuser="${database.zmag.user}"
            dbpassword="${database.zmag.password}"
            url="${database.zmag.url}"/>
        <oracle:createManagedDataSource
            deployeruri="${deployer.uri}"
            userid="${oc4j.admin.user}"
            password="${oc4j.admin.password}"
            applicationname="default"
            datasourcename="ZakenmagazijnDS"
            jndilocation="jdbc/ZakenmagazijnDS"
            connectionpoolname="ZakenCP"/>
    </target>

    <target name="destroy-datasource"
            depends=""
            description="remove database connections from OC4J container">
        <oracle:removeManagedDataSource
            deployeruri="${deployer.uri}"
            userid="${oc4j.admin.user}"
            password="${oc4j.admin.password}"
            applicationName="default"
            datasourceName="ZakenmagazijnDS"/>
        <oracle:removeDataSourceConnectionPool
            deployeruri="${deployer.uri}"
            userid="${oc4j.admin.user}"
            password="${oc4j.admin.password}"
            applicationname="default"
            name="ZakenCP" />
    </target>

    <target name="create-shared-libraries" 
            depends="target-dir,propcheck"
            description="create shared libraries in the target OC4J instance">
        <oracle:publishSharedLibrary 
                deployeruri="${deployer.uri}" 
                userid="${oc4j.admin.user}" 
                password="${oc4j.admin.password}" 
                libraryname="logging.log4j" 
                libraryversion="1.0">
            <oracle:uploadCodeSource path="${deploy.packages.dir}/commons-logging-1.1.1.jar"/>
            <oracle:uploadCodeSource path="${deploy.packages.dir}/log4j-1.2.13.jar"/>
        </oracle:publishSharedLibrary>
        <oracle:publishSharedLibrary 
                deployeruri="${deployer.uri}" 
                userid="${oc4j.admin.user}" 
                password="${oc4j.admin.password}" 
                libraryname="jaxb-2.0" 
                libraryversion="1.0">
            <oracle:uploadCodeSource path="${deploy.packages.dir}/activation-1.1.jar"/>
            <oracle:uploadCodeSource path="${deploy.packages.dir}/jaxb-api-2.1.jar"/>
            <oracle:uploadCodeSource path="${deploy.packages.dir}/jaxb-impl-2.1.6.jar"/> 
            <oracle:uploadCodeSource path="${deploy.packages.dir}/jaxb-xjc-2.1.6.jar"/>
            <oracle:uploadCodeSource path="${deploy.packages.dir}/jsr173_api-1.0.jar"/>
            <oracle:sharedLibraryImport libraryname="logging.log4j"/>
        </oracle:publishSharedLibrary>
    </target>

    <target name="destroy-shared-libraries" 
            depends="propcheck"
            description="delete shared libraries from the target OC4J instance">
        <oracle:removeSharedLibrary
                deployerUri="${deployer.uri}"
                userid="${oc4j.admin.user}"
                password="${oc4j.admin.password}"
                libraryName="jaxb-2.0"
                libraryVersion="1.0"/>
        <oracle:removeSharedLibrary
        	    deployerUri="${deployer.uri}"
                userid="${oc4j.admin.user}"
                password="${oc4j.admin.password}"
                libraryName="logging.log4j"
                libraryVersion="1.0"/>
    </target>

    <target name="install"
            depends="create-shared-libraries,create-datasource"
            description="Create shared libraries and the data source in the target OC4J instance"/> 


    <target name="uninstall"
            depends="destroy-shared-libraries, destroy-datasource"
            description="Drop application and its datasources; you may need to undeploy first" />

    <!-- replace these @tokens@ in file during copy -->
    <filterset id="applicationFilter">
        <filter token="applicationName" value="${application.name.zmag}" />
        <filter token="applicationVersion" value="${application.version}" />
        <filter token="applicationPropDir" value="${application.propdir.zmag}" />
        <filter token="applicationContextRoot" value="${application.contextroot.zmag}" />
        <filter token="log4jConfigFile" value="${log4j.configfile}" />
    </filterset>


    <target name="target-dir"
    	    description="Build the target directory to store generated files">
        <mkdir dir="${target.dir}"/>
    </target>


    <target name="application-plan"
            description="Build the application plan from a template"
            depends="buildinfo, propcheck, target-dir">
        <echo message="Build application plan" />
        <copy tofile="${application.plan.file}" file="./application_plan-template.dat">
            <filterset refid="applicationFilter" />
        </copy>
    </target>


    <target name="build"
            description="Build the stuff to be deployed"
            depends="buildinfo, propcheck, application-plan" />


    <target name="deploy"
            description="Deploy the EAR to the OC4J application server"
            depends="dircheck, build">
        <echo message="Start deploy ${application.name.zmag} to ${deployer.uri}, log in ${deploy.log}"/>
        <oracle:deploy
            deployerUri="${deployer.uri}"
            userid="${oc4j.admin.user}"
            password="${oc4j.admin.password}"
            file="${ear.file}"
            deploymentName="${application.name.zmag}"
            deploymentPlan="${application.plan.file}"
            debug="true"
            logfile="${deploy.log}" />
        <echo message="Deployed ${application.name.zmag}"/>
    </target>


    <target name="undeploy"
            description="Remove application from application server"
            depends="buildinfo, propcheck, target-dir">
        <echo message="Start undeploy ${application.name.zmag} from ${deployer.uri}, log in ${undeploy.log}"/>
        <oracle:undeploy
            deployerUri="${deployer.uri}"
            userId="${oc4j.admin.user}"
            password="${oc4j.admin.password}"
            deploymentName="${application.name.zmag}"
            debug="true"
            logFile="${undeploy.log}"/>
        <echo message="Undeployed ${application.name.zmag}"/>
    </target>

    <target name="clean"
            description="Remove generated files, leave application deployed">
        <delete dir="${target.dir}"/>
    </target>


    <!-- Task definitions for oc4j webservices tasks -->
    <!--
        references:
         * for parameters of oracle task:
           http://download-uk.oracle.com/docs/cd/B31017_01/web.1013/b28951/anttasks.htm
         * for interpretation of the various xml files:
           http://download.oracle.com/docs/cd/B25221_04/web.1013/b14433/packag.htm
    -->
    <taskdef resource="oracle/antlib.xml" uri="antlib:oracle" loaderRef="oracle.tasks.loader" />

</project>
