<?xml version="1.0" encoding="UTF-8"?>
<project name="IOO Ear Deployment" xmlns:oracle="antlib:oracle">
    <description>
        Ant file to build an EAR based on single WAR and deploy this to OC4J.
        Building the EAR is done on the machine where it will be deployed.
        This Ant file is included in a tarball generated by Maven on a developer workstation.

        You need to provide relevant properties with -Ddeploy.properties.file=...
        when using this file.
    </description>

    <property file="version.properties"/>
    <!-- where to find target-specific properties -->
    <property file="${deploy.properties.file}" />
    <!-- source dir that contains the war packages to deploy -->
    <property name="deploy.packages.dir" value="."/>

    <!-- where the ear to be deployed will be created -->
    <property name="target.dir" value="target" />
    <property name="ear.file" value="${target.dir}/${application.name}.ear" />
    <property name="application.plan.file" value="${target.dir}/application_plan.dat" />
    <property name="deploy.log" value="${target.dir}/deploy.log" />
    <property name="undeploy.log" value="${target.dir}/undeploy.log" />

    <target name="buildinfo"
        description="Display build information">
        <echo message="BuildName: ${ant.project.name}"/>
        <echo message="BuildHome: ${basedir}"/>
        <echo message="BuildFile: ${ant.file}"/>
        <echo message="BuildJVM: ${ant.java.version}"/>
    </target>

    <target name="propcheck"
        description="Verify that properties required by deployment are present">
        <echo message="Verify that properties required by deployment are present"/>
        <fail unless="deploy.properties.file" message="Missing command line argument: -Ddeploy.properties.file=..." />
        <fail unless="oc4j.admin.user" message="Required property missing from ${deploy.properties.file}: oc4j.admin.user" />
        <fail unless="oc4j.admin.password" message="Required property missing from ${deploy.properties.file}: oc4j.admin.password" />
        <fail unless="deployer.uri" message="Required property missing from ${deploy.properties.file}: deployer.uri" />
        <fail unless="application.contextroot" message="Required property missing from ${deploy.properties.file}: application.contextroot" />
        <fail unless="application.name" message="Required property missing from ${deploy.properties.file}: application.name" />
    </target>


    <target name="create-shared-libraries"
            depends="target-dir,propcheck"
            description="create shared libraries in the target OC4J instance">
        <oracle:publishSharedLibrary
                deployeruri="${deployer.uri}"
                userid="${oc4j.admin.user}"
                password="${oc4j.admin.password}"
                libraryname="apache.xml"
                libraryversion="2.9.1">
            <oracle:uploadCodeSource path="xercesImpl-2.9.1.jar"/>
            <oracle:uploadCodeSource path="xml-apis-1.3.04.jar"/>
        </oracle:publishSharedLibrary>
    </target>

    <target name="destroy-shared-libraries"
            depends="propcheck"
            description="delete shared libraries from the target OC4J instance">
        <oracle:removeSharedLibrary
                deployerUri="${deployer.uri}"
                userid="${oc4j.admin.user}"
                password="${oc4j.admin.password}"
                libraryName="apache.xml"
                libraryVersion="2.9.1"/>
    </target>

    <target name="install"
            depends="create-shared-libraries"
            description="Create shared libraries in the target OC4J instance"/>

    <target name="uninstall"
            depends="destroy-shared-libraries"
            description="Remove shared libraries from the OC4J instance; you may need to undeploy first" />

    <!-- replace these @tokens@ in file during copy -->
    <filterset id="applicationFilter">
        <filter token="applicationName" value="${application.name}" />
        <filter token="applicationVersion" value="${application.version}" />
        <filter token="applicationContextRoot" value="${application.contextroot}" />
        <filter token="applicationPropDir" value="${application.propdir}" />
    </filterset>


    <target name="build"
        depends="propcheck, target-dir"
        description="Build the EAR to be deployed">
        <echo message="Build ${application.name}.dat"/>
        <copy tofile="${target.dir}/${application.name}.dat" file="./${application.name}-template.dat">
            <filterset refid="applicationFilter" />
        </copy>
        <echo message="Build ${ear.file}"/>
        <ear destfile="${ear.file}" appxml="application.xml">
            <fileset dir=".">
            	<include name="*.war"/>
            </fileset>
        </ear>
    </target>


    <target name="deploy"
        description="Deploy the EAR to the OC4J application server"
        depends="buildinfo, propcheck, build">
        <echo message="Start deploy ${application.name} to ${deployer.uri}, log in ${deploy.log}"/>
        <oracle:deploy
            deployerUri="${deployer.uri}"
            userid="${oc4j.admin.user}"
            password="${oc4j.admin.password}"
            file="${ear.file}"
            deploymentName="${application.name}"
            deploymentPlan="${target.dir}/${application.name}.dat"
            debug="true"
            logfile="${deploy.log}" />
        <echo message="Deployed ${application.name}"/>
    </target>


    <target name="undeploy"
        description="Remove application from application server"
        depends="buildinfo, propcheck">
        <echo message="Start undeploy ${application.name} from ${deployer.uri}, log in ${undeploy.log}"/>
        <mkdir dir="${target.dir}"/>
        <oracle:undeploy
            deployerUri="${deployer.uri}"
            userId="${oc4j.admin.user}"
            password="${oc4j.admin.password}"
            deploymentName="${application.name}"
            debug="true"
            logFile="${undeploy.log}"/>
        <echo message="Undeployed ${application.name}"/>
    </target>

    <target name="target-dir"
            description="Build the target directory to store generated files">
        <delete dir="${target.dir}"/>
        <mkdir dir="${target.dir}"/>
    </target>


    <!-- Task definitions for oc4j webservices tasks -->
    <!--
        references:
         * for parameters of oracle task:
           http://download-uk.oracle.com/docs/cd/B31017_01/web.1013/b28951/anttasks.htm
         * for interpretation of the various xml files:
           http://download.oracle.com/docs/cd/B25221_04/web.1013/b14433/packag.htm
    -->
    <taskdef resource="oracle/antlib.xml" uri="antlib:oracle" loaderRef="oracle.tasks.loader" />

</project>
